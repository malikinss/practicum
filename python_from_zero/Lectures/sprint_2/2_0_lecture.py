class <Имя класса>:
    # конструктор класса — функция с именем __init__
    def __init__(self, <параметры конструктора>):
        # тело метода

class Contact:
    def __init__(self, name, phone, birthday):
        self.name = name
        self.phone = phone
        self.birthday = birthday

        # После создания объекта сообщим об этом
        print(f'Создан новый контакт: "{name}"')

    # Создадим метод show для вывода на печать данных любого контакта:
    def show(self):
        print(f'Имя: {self.name}, '
              f'телефон: {self.phone}, '
              f'день рождения: {self.birthday}')


# теперь можно создать объект класса Contact, передав в конструктор значения:
ivan = Contact(name='Иван', phone='+155512345', birthday='2.12.1985')

# а можно использовать сокращённый синтаксис:
maria = Contact('Марья', '+277734567', '4.04.1999')

# вызовем метод show() для объекта ivan:
ivan.show()
# будет напечатано: "Имя: Иван, телефон: +155512345, день рождения: 2.12.1985"


# При создании экземпляра класса str
# нет необходимости указывать имя родительского класса
# Python сам понимает: раз в кавычках — значит, str.
text = ('Я написать стихи готов, Ребята дорогие, '
        'Но не печатаю стихов - Печатают другие.')

print(text)
# будет напечатано:
# Я написать стихи готов, Ребята дорогие, Но не печатаю стихов - Печатают другие.

class Contact:
    def __init__(self, name, phone, birthday):
        self.name = name
        self.phone = phone
        self.birthday = birthday
        print(f'Создан новый контакт: "{name}"')

    def show(self):
        print(f'Имя: {self.name}, '
              f'телефон: {self.phone}, '
              f'день рождения: {self.birthday}')

    def __str__(self):
        # Можно задать любую строку, например
        # Не печатай меня, ведь я — объект!,
        # но лучше пусть при печати выводится что-то осмысленное:
        # название объекта и имя
        return f'Контакт: {self.name}'


# создаём объект:
ivan = Contact(name='Иван', phone='+155512345', birthday='2.12.1985')
# При создании объект будет напечатно: Создан новый контакт: "Иван"

# печатаем объект:
print(ivan)
# Будет напечатано: "Контакт: Иван" 